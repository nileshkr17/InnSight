import { useState } from "react";
import { Link } from "react-router-dom";
// import { networkAdapter } from "services/NetworkAdapter";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import { Formik, Form, Field } from "formik";
// import Schemas from "utils/validation-schemas";
import "./Register.css";
import { REGISTRATION_MESSAGES } from "../utils/constants";
import Schemas from "../utils/validation-schema";
import Toast from "../toast/Toast";
import cities from "./cities.json";

/**
 * Register Component
 * Renders a registration form that allows new users to create an account.
 * It captures user input for personal information and credentials, submitting these to a registration endpoint.
 * Upon successful registration, the user is notified and redirected to the login page.
 */
const Register = () => {
  const navigate = useNavigate();
  const [toastMessage, setToastMessage] = useState("");
  const [toastType, setToastType] = useState("success");
  const [showToast, setShowToast] = useState(false);

  /**
   * Submits the registration form data to the server.
   * It performs an asynchronous operation to post the form data to a registration endpoint.
   * If registration is successful, a success message is displayed, and the user is redirected to the login page after a brief delay.
   * Otherwise, the user is informed of the failure.
   *
   * @param {Object} e - The event object generated by the form submission.
   */
  // const handleSubmit = async (values) => {
  //   const response = await axios.post(
  //     "http://127.0.0.1:6969/api/addUser",
  //     values
  //   );
  //   console.log("response", response);
  //   if (response && response.errors && response.errors.length < 1) {
  //     setToastMessage(REGISTRATION_MESSAGES.SUCCESS);
  //     setShowToast(true);
  //     setTimeout(() => navigate("/login"), 2000);
  //   } else {
  //     setToastType("error");
  //     setToastMessage(response.errors[0]);
  //     setShowToast(true);
  //   }
  // };
  const handleSubmit = async (values) => {
    try {
      const response = await axios.post(
        "http://127.0.0.1:6969/api/addUser",
        values
      );
      console.log("response", response);
      if (response.status === 201) {
        setToastMessage(REGISTRATION_MESSAGES.SUCCESS);
        setShowToast(true);
        setTimeout(() => navigate("/login"), 2000);
      } else {
        setToastType("error");
        setToastMessage(response.data.message || "Registration failed");
        setShowToast(true);
      }
    } catch (error) {
      console.error("Error:", error);
      setToastType("error");
      setToastMessage("Internal Server Error");
      setShowToast(true);
    }
  };

  return (
    <>
      <div className="register__form">
        <div className="register-container container mx-auto p-4 flex justify-center min-h-[600px] items-center">
          <Formik
            initialValues={{
              // firstName: "",
              // lastName: "",
              username: "",
              location: "",
              gender: "",
              governmentId: {
                type: "", // New field for government ID type
                value: "", // New field for government ID value
              },
              // governmentIdType: "",
              // governemntIdValue: "",
              email: "",
              // phoneNumber: "",
              password: "",
              confirmPassword: "",
            }}
            validationSchema={Schemas.signupSchema}
            onSubmit={(values) => handleSubmit(values)}
          >
            {({ errors, touched }) => (
              <Form>
                <div className="form-container w-full max-w-lg p-4 shadow-md md:p-10">
                  <div
                    className="mb-10 text-center"
                    style={{ marginBottom: "2.5rem", textAlign: "center" }}
                  >
                    <h2 className="text-container text-3xl font-extrabold text-brand">
                      Join the Adventure!
                    </h2>
                    <p className="text-container-2 text-gray-500">
                      Create your account and start your journey with us
                    </p>
                  </div>
                  {/* <div className="form-input-container flex flex-wrap mb-6 -mx-3">
                    <div className="name-container w-full px-3 mb-6 md:w-1/2 md:mb-0 relative">
                      <Field
                        name="firstName"
                        placeholder="First Name"
                        autoComplete="given-name"
                        className={`name-field ${
                          errors.firstName && touched.firstName
                            ? "border-red-500"
                            : ""
                        } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                        style={{
                          border:
                            errors.firstName && touched.firstName
                              ? "1px solid #EF4444"
                              : "",
                        }}
                      />
                    </div>
                    <div className="name2-container w-full px-3 md:w-1/2">
                      <Field
                        name="lastName"
                        placeholder="Last Name"
                        autoComplete="family-name"
                        className={`name-field ${
                          errors.lastName && touched.lastName
                            ? "border-red-500"
                            : ""
                        } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                        style={{
                          border:
                            errors.firstName && touched.firstName
                              ? "1px solid #EF4444"
                              : "",
                        }}
                      />
                    </div>
                  </div> */}
                  <div className="mb-6" style={{ marginBottom: "1.5rem" }}>
                    <Field
                      name="username"
                      placeholder="User Name"
                      autoComplete="username"
                      className={`name-field ${
                        errors.username && touched.username
                          ? "border-red-500"
                          : ""
                      } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                      style={{
                        border:
                          errors.username && touched.username
                            ? "1px solid #EF4444"
                            : "",
                      }}
                    />
                  </div>
                  <div className="form-input-container flex flex-wrap mb-6 -mx-3">
                    <div className="name-container w-full px-3 mb-6 md:w-1/2 md:mb-0 relative">
                      <Field
                        as="select"
                        name="location"
                        className={`name-field ${
                          errors.location && touched.location
                            ? "border-red-500"
                            : ""
                        } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                        style={{
                          border:
                            errors.location && touched.location
                              ? "1px solid #EF4444"
                              : "",
                          maxHeight: "3rem",
                          overflowY: "auto",
                        }}
                      >
                        <option
                          value=""
                          style={{
                            color: "rgba(55,65,85,1)",
                            lineHeight: "1.25",
                            backgroundColor: "rgba(229, 231, 235, 1)",
                            maxHeight: "3rem",
                            overflowY: "auto",
                          }}
                        >
                          Select a City
                        </option>
                        {cities.map((city) => (
                          <option key={city} value={city}>
                            {city}
                          </option>
                        ))}
                      </Field>
                    </div>
                    <div className="name2-container w-full px-3 md:w-1/2">
                      <Field
                        name="gender"
                        placeholder="Gender: Male/Female/Other"
                        autoComplete="gender"
                        className={`name-field ${
                          errors.gender && touched.gender
                            ? "border-red-500"
                            : ""
                        } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                        style={{
                          border:
                            errors.gender && touched.gender
                              ? "1px solid #EF4444"
                              : "",
                        }}
                      />
                    </div>
                  </div>
                  <div className="form-input-container flex flex-wrap mb-6 -mx-3">
                    <div className="name-container w-full px-3 mb-6 md:w-1/2 md:mb-0 relative">
                      <Field
                        name="governmentId.type"
                        placeholder="PAN/AADHAR"
                        autoComplete="governmentId.type"
                        className={`name-field  border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                        style={{
                          border:
                            errors.governmentId?.type &&
                            touched.governmentId?.type
                              ? "1px solid #EF4444"
                              : "",
                        }}
                      />
                    </div>
                    <div className="name2-container w-full px-3 md:w-1/2">
                      <Field
                        name="governmentId.value"
                        placeholder="Government Id Number"
                        autoComplete="governmentId.value"
                        className={`name-field border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                        style={{
                          border:
                            errors.governmentId?.value &&
                            touched.governmentId?.value
                              ? "1px solid #EF4444"
                              : "",
                        }}
                      />
                    </div>
                  </div>
                  <div className="mb-6" style={{ marginBottom: "1.5rem" }}>
                    <Field
                      name="email"
                      placeholder="Email"
                      autoComplete="email"
                      className={`name-field ${
                        errors.email && touched.email ? "border-red-500" : ""
                      } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                      style={{
                        border:
                          errors.email && touched.email
                            ? "1px solid #EF4444"
                            : "",
                      }}
                    />
                  </div>
                  {/* <div className="mb-6" style={{ marginBottom: "1.5rem" }}>
                    <Field
                      name="phoneNumber"
                      placeholder="Phone"
                      autoComplete="tel"
                      className={`name-field ${
                        errors.phoneNumber && touched.phoneNumber
                          ? "border-red-500"
                          : ""
                      } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                      style={{
                        border:
                          errors.phoneNumber && touched.phoneNumber
                            ? "1px solid #EF4444"
                            : "",
                      }}
                    />
                  </div> */}
                  <div className="mb-6" style={{ marginBottom: "1.5rem" }}>
                    <Field
                      name="password"
                      placeholder="Password"
                      autoComplete="new-password"
                      className={`name-field ${
                        errors.password && touched.password
                          ? "border-red-500"
                          : ""
                      } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                      style={{
                        border:
                          errors.password && touched.password
                            ? "1px solid #EF4444"
                            : "",
                      }}
                    />
                  </div>
                  <div className="mb-6" style={{ marginBottom: "1.5rem" }}>
                    <Field
                      name="confirmPassword"
                      placeholder="Confirm Password"
                      autoComplete="new-password"
                      className={`name-field ${
                        errors.confirmPassword && touched.confirmPassword
                          ? "border-red-500"
                          : ""
                      } border block w-full px-4 py-3 mb leading-tight text-gray-700 bg-gray-200 rounded appearance-none focus:outline-none focus:bg-white`}
                      style={{
                        border:
                          errors.confirmPassword && touched.confirmPassword
                            ? "1px solid #EF4444"
                            : "",
                      }}
                    />
                  </div>
                  <div className="button-container flex items-center w-full my-3">
                    <button
                      type="submit"
                      className="button-type w-full px-4 py-2 font-bold text-white rounded bg-brand hover:bg-blue-700 focus:outline-none focus:shadow-outline"
                    >
                      Register
                    </button>
                  </div>
                  <Link
                    to="/login"
                    className="back-login inline-block w-full text-lg text-center text-gray-500 align-baseline hover:text-blue-800"
                  >
                    Back to login
                  </Link>
                  {showToast && (
                    <Toast
                      type={toastType}
                      message={toastMessage}
                      dismissError
                    />
                  )}
                </div>
              </Form>
            )}
          </Formik>
        </div>
      </div>
    </>
  );
};

export default Register;
